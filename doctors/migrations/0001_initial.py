# Generated by Django 5.2.3 on 2025-06-18 16:42

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("location", models.CharField(blank=True, max_length=100)),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Specialization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("doctor_id", models.CharField(max_length=20, unique=True)),
                (
                    "medical_license_number",
                    models.CharField(max_length=50, unique=True),
                ),
                ("license_expiry_date", models.DateField()),
                ("hire_date", models.DateField()),
                (
                    "employment_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("on_leave", "On Leave"),
                            ("suspended", "Suspended"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "consultation_fee",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "years_of_experience",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(70),
                        ]
                    ),
                ),
                ("bio", models.TextField(blank=True)),
                (
                    "languages_spoken",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated list of languages",
                        max_length=200,
                    ),
                ),
                ("is_available_for_consultation", models.BooleanField(default=True)),
                ("max_patients_per_day", models.PositiveIntegerField(default=20)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "department",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="doctors",
                        to="doctors.department",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "specializations",
                    models.ManyToManyField(
                        related_name="doctors", to="doctors.specialization"
                    ),
                ),
            ],
            options={
                "ordering": ["doctor_id"],
            },
        ),
        migrations.AddField(
            model_name="department",
            name="head_of_department",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="headed_departments",
                to="doctors.doctor",
            ),
        ),
        migrations.CreateModel(
            name="DoctorQualification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "qualification_type",
                    models.CharField(
                        choices=[
                            ("degree", "Degree"),
                            ("diploma", "Diploma"),
                            ("certificate", "Certificate"),
                            ("fellowship", "Fellowship"),
                            ("residency", "Residency"),
                        ],
                        max_length=20,
                    ),
                ),
                ("degree_name", models.CharField(max_length=100)),
                ("institution", models.CharField(max_length=200)),
                ("year_obtained", models.PositiveIntegerField()),
                ("grade_or_score", models.CharField(blank=True, max_length=50)),
                (
                    "certificate_file",
                    models.FileField(
                        blank=True, null=True, upload_to="doctor_certificates/"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="qualifications",
                        to="doctors.doctor",
                    ),
                ),
            ],
            options={
                "ordering": ["-year_obtained"],
            },
        ),
        migrations.CreateModel(
            name="DoctorAvailability",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "day_of_week",
                    models.IntegerField(
                        choices=[
                            (0, "Monday"),
                            (1, "Tuesday"),
                            (2, "Wednesday"),
                            (3, "Thursday"),
                            (4, "Friday"),
                            (5, "Saturday"),
                            (6, "Sunday"),
                        ]
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("is_available", models.BooleanField(default=True)),
                ("break_start_time", models.TimeField(blank=True, null=True)),
                ("break_end_time", models.TimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability_schedule",
                        to="doctors.doctor",
                    ),
                ),
            ],
            options={
                "ordering": ["day_of_week", "start_time"],
                "unique_together": {("doctor", "day_of_week")},
            },
        ),
        migrations.AddIndex(
            model_name="doctor",
            index=models.Index(
                fields=["doctor_id"], name="doctors_doc_doctor__db23fb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="doctor",
            index=models.Index(fields=["user"], name="doctors_doc_user_id_615418_idx"),
        ),
        migrations.AddIndex(
            model_name="doctor",
            index=models.Index(
                fields=["employment_status"], name="doctors_doc_employm_7a05be_idx"
            ),
        ),
    ]
