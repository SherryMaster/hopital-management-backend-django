# Generated by Django 5.2.3 on 2025-06-18 16:47

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("patients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Building",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("address", models.TextField()),
                ("floors", models.PositiveIntegerField(default=1)),
                ("description", models.TextField(blank=True)),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "construction_year",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EquipmentCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("requires_certification", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Equipment Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="RoomType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "color_code",
                    models.CharField(
                        default="#007bff",
                        help_text="Hex color code for floor plans",
                        max_length=7,
                    ),
                ),
                ("requires_special_equipment", models.BooleanField(default=False)),
                ("max_occupancy", models.PositiveIntegerField(default=1)),
                ("is_sterile_required", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("equipment_id", models.CharField(max_length=20, unique=True)),
                ("name", models.CharField(max_length=200)),
                ("manufacturer", models.CharField(max_length=100)),
                ("model_number", models.CharField(max_length=100)),
                ("serial_number", models.CharField(max_length=100, unique=True)),
                ("purchase_date", models.DateField()),
                (
                    "purchase_price",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("warranty_expiry", models.DateField(blank=True, null=True)),
                ("supplier", models.CharField(blank=True, max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("in_use", "In Use"),
                            ("maintenance", "Under Maintenance"),
                            ("repair", "Under Repair"),
                            ("calibration", "Calibration Required"),
                            ("retired", "Retired"),
                            ("out_of_service", "Out of Service"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("needs_replacement", "Needs Replacement"),
                        ],
                        default="excellent",
                        max_length=20,
                    ),
                ),
                ("last_maintenance_date", models.DateField(blank=True, null=True)),
                ("next_maintenance_date", models.DateField(blank=True, null=True)),
                (
                    "maintenance_interval_days",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("description", models.TextField(blank=True)),
                ("specifications", models.JSONField(blank=True, default=dict)),
                ("notes", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_equipment",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equipment",
                        to="infrastructure.equipmentcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["equipment_id"],
            },
        ),
        migrations.CreateModel(
            name="Floor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("floor_number", models.IntegerField()),
                ("name", models.CharField(blank=True, max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "area_sqft",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "is_accessible",
                    models.BooleanField(
                        default=True, help_text="Wheelchair accessible"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "building",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="building_floors",
                        to="infrastructure.building",
                    ),
                ),
            ],
            options={
                "ordering": ["building", "floor_number"],
                "unique_together": {("building", "floor_number")},
            },
        ),
        migrations.CreateModel(
            name="MaintenanceRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "maintenance_type",
                    models.CharField(
                        choices=[
                            ("preventive", "Preventive"),
                            ("corrective", "Corrective"),
                            ("emergency", "Emergency"),
                            ("calibration", "Calibration"),
                            ("inspection", "Inspection"),
                        ],
                        max_length=20,
                    ),
                ),
                ("scheduled_date", models.DateField()),
                ("actual_date", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("deferred", "Deferred"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("work_performed", models.TextField(blank=True)),
                ("parts_replaced", models.TextField(blank=True)),
                (
                    "cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "equipment_condition_before",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("needs_replacement", "Needs Replacement"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "equipment_condition_after",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("needs_replacement", "Needs Replacement"),
                        ],
                        max_length=20,
                    ),
                ),
                ("next_maintenance_date", models.DateField(blank=True, null=True)),
                (
                    "maintenance_report",
                    models.FileField(
                        blank=True, null=True, upload_to="maintenance_reports/"
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="maintenance_records",
                        to="infrastructure.equipment",
                    ),
                ),
                (
                    "supervisor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="supervised_maintenance",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "technician",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="performed_maintenance",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-scheduled_date"],
            },
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("room_number", models.CharField(max_length=20)),
                ("name", models.CharField(blank=True, max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "area_sqft",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("occupied", "Occupied"),
                            ("maintenance", "Under Maintenance"),
                            ("cleaning", "Being Cleaned"),
                            ("reserved", "Reserved"),
                            ("out_of_service", "Out of Service"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("has_window", models.BooleanField(default=False)),
                ("has_private_bathroom", models.BooleanField(default=False)),
                ("has_oxygen_supply", models.BooleanField(default=False)),
                ("has_suction", models.BooleanField(default=False)),
                ("has_nurse_call", models.BooleanField(default=True)),
                ("bed_count", models.PositiveIntegerField(default=1)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "floor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rooms",
                        to="infrastructure.floor",
                    ),
                ),
                (
                    "room_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rooms",
                        to="infrastructure.roomtype",
                    ),
                ),
            ],
            options={
                "ordering": ["floor", "room_number"],
            },
        ),
        migrations.AddField(
            model_name="equipment",
            name="current_room",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="equipment",
                to="infrastructure.room",
            ),
        ),
        migrations.CreateModel(
            name="Bed",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("bed_number", models.CharField(max_length=10)),
                (
                    "bed_type",
                    models.CharField(
                        choices=[
                            ("standard", "Standard"),
                            ("icu", "ICU"),
                            ("pediatric", "Pediatric"),
                            ("bariatric", "Bariatric"),
                            ("isolation", "Isolation"),
                            ("maternity", "Maternity"),
                        ],
                        default="standard",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("occupied", "Occupied"),
                            ("maintenance", "Under Maintenance"),
                            ("cleaning", "Being Cleaned"),
                            ("reserved", "Reserved"),
                            ("out_of_service", "Out of Service"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("admission_date", models.DateTimeField(blank=True, null=True)),
                ("has_monitoring", models.BooleanField(default=False)),
                ("has_ventilator", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "current_patient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="current_bed",
                        to="patients.patient",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="beds",
                        to="infrastructure.room",
                    ),
                ),
            ],
            options={
                "ordering": ["room", "bed_number"],
            },
        ),
        migrations.CreateModel(
            name="RoomAssignment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "assigned_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("discharge_date", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("assignment_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="room_assignments_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "bed",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="infrastructure.bed",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="room_assignments",
                        to="patients.patient",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="infrastructure.room",
                    ),
                ),
            ],
            options={
                "ordering": ["-assigned_date"],
            },
        ),
        migrations.AddIndex(
            model_name="equipment",
            index=models.Index(fields=["status"], name="infrastruct_status_d6a6a7_idx"),
        ),
        migrations.AddIndex(
            model_name="equipment",
            index=models.Index(
                fields=["category"], name="infrastruct_categor_790879_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="equipment",
            index=models.Index(
                fields=["current_room"], name="infrastruct_current_ee82d8_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="bed",
            unique_together={("room", "bed_number")},
        ),
        migrations.AddIndex(
            model_name="roomassignment",
            index=models.Index(
                fields=["patient", "assigned_date"],
                name="infrastruct_patient_08fea7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="roomassignment",
            index=models.Index(
                fields=["room", "assigned_date"], name="infrastruct_room_id_7138c3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="room",
            index=models.Index(fields=["status"], name="infrastruct_status_ad9f48_idx"),
        ),
        migrations.AddIndex(
            model_name="room",
            index=models.Index(
                fields=["room_type"], name="infrastruct_room_ty_d05272_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="room",
            unique_together={("floor", "room_number")},
        ),
    ]
