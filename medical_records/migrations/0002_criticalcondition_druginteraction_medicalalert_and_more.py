# Generated by Django 5.2.3 on 2025-06-19 14:00

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("doctors", "0001_initial"),
        ("medical_records", "0001_initial"),
        ("patients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CriticalCondition",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "condition_type",
                    models.CharField(
                        choices=[
                            ("cardiac_arrest", "Cardiac Arrest"),
                            ("respiratory_failure", "Respiratory Failure"),
                            ("sepsis", "Sepsis"),
                            ("stroke", "Stroke"),
                            ("myocardial_infarction", "Myocardial Infarction"),
                            ("anaphylaxis", "Anaphylaxis"),
                            ("diabetic_emergency", "Diabetic Emergency"),
                            ("seizure", "Seizure"),
                            ("trauma", "Major Trauma"),
                            ("poisoning", "Poisoning"),
                            ("other", "Other Critical Condition"),
                        ],
                        max_length=30,
                    ),
                ),
                ("condition_name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("onset_time", models.DateTimeField()),
                (
                    "severity_score",
                    models.IntegerField(
                        help_text="Severity score 1-10",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolution_time", models.DateTimeField(blank=True, null=True)),
                ("response_team_notified", models.BooleanField(default=False)),
                ("response_time", models.DateTimeField(blank=True, null=True)),
                ("immediate_treatment", models.TextField(blank=True)),
                ("outcome", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "attending_physician",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="critical_conditions_attended",
                        to="doctors.doctor",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="critical_conditions",
                        to="medical_records.medicalrecord",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="critical_conditions",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "ordering": ["-onset_time", "-severity_score"],
            },
        ),
        migrations.CreateModel(
            name="DrugInteraction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "drug1",
                    models.CharField(help_text="First drug name", max_length=200),
                ),
                (
                    "drug2",
                    models.CharField(help_text="Second drug name", max_length=200),
                ),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[
                            ("major", "Major Interaction"),
                            ("moderate", "Moderate Interaction"),
                            ("minor", "Minor Interaction"),
                            ("contraindication", "Contraindication"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Description of the interaction"),
                ),
                (
                    "clinical_effect",
                    models.TextField(help_text="Clinical effect of the interaction"),
                ),
                (
                    "mechanism",
                    models.TextField(blank=True, help_text="Mechanism of interaction"),
                ),
                (
                    "management_recommendation",
                    models.TextField(help_text="Recommended management"),
                ),
                (
                    "severity_score",
                    models.IntegerField(
                        help_text="Severity score 1-10",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "evidence_level",
                    models.CharField(
                        choices=[
                            ("established", "Established"),
                            ("probable", "Probable"),
                            ("suspected", "Suspected"),
                            ("theoretical", "Theoretical"),
                        ],
                        default="established",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-severity_score", "drug1", "drug2"],
                "unique_together": {("drug1", "drug2")},
            },
        ),
        migrations.CreateModel(
            name="MedicalAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("allergy", "Allergy"),
                            ("drug_interaction", "Drug Interaction"),
                            ("critical_condition", "Critical Condition"),
                            ("vital_signs", "Vital Signs Alert"),
                            ("lab_result", "Lab Result Alert"),
                            ("medication_warning", "Medication Warning"),
                            ("procedure_warning", "Procedure Warning"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("acknowledged", "Acknowledged"),
                            ("resolved", "Resolved"),
                            ("dismissed", "Dismissed"),
                        ],
                        default="active",
                        max_length=15,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("alert_data", models.JSONField(blank=True, default=dict)),
                (
                    "triggered_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                (
                    "auto_dismiss_after",
                    models.DurationField(
                        blank=True,
                        help_text="Auto-dismiss after this duration",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="medical_records.medicalrecord",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_alerts",
                        to="patients.patient",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "triggered_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-severity", "-triggered_at"],
                "indexes": [
                    models.Index(
                        fields=["patient", "status"],
                        name="medical_rec_patient_d8a4aa_idx",
                    ),
                    models.Index(
                        fields=["alert_type", "severity"],
                        name="medical_rec_alert_t_da4b32_idx",
                    ),
                    models.Index(
                        fields=["triggered_at"], name="medical_rec_trigger_66caf2_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PatientAllergy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "allergy_type",
                    models.CharField(
                        choices=[
                            ("drug", "Drug Allergy"),
                            ("food", "Food Allergy"),
                            ("environmental", "Environmental Allergy"),
                            ("latex", "Latex Allergy"),
                            ("contrast", "Contrast Media Allergy"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "allergen",
                    models.CharField(help_text="Name of the allergen", max_length=200),
                ),
                ("reaction_description", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("mild", "Mild"),
                            ("moderate", "Moderate"),
                            ("severe", "Severe"),
                            ("life_threatening", "Life Threatening"),
                        ],
                        max_length=20,
                    ),
                ),
                ("onset_date", models.DateField(blank=True, null=True)),
                ("last_reaction_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("verified_by_doctor", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                (
                    "treatment_given",
                    models.TextField(
                        blank=True, help_text="Treatment given for reaction"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allergy_records",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "ordering": ["-severity", "allergen"],
                "unique_together": {("patient", "allergen")},
            },
        ),
    ]
