# Generated by Django 5.2.3 on 2025-06-19 17:22

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        (
            "notifications",
            "0004_templatelanguage_templatevariable_unifiedtemplate_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationSettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notifications_enabled",
                    models.BooleanField(
                        default=True, help_text="Master notification toggle"
                    ),
                ),
                ("email_notifications_enabled", models.BooleanField(default=True)),
                ("sms_notifications_enabled", models.BooleanField(default=True)),
                ("push_notifications_enabled", models.BooleanField(default=True)),
                ("in_app_notifications_enabled", models.BooleanField(default=True)),
                (
                    "primary_email",
                    models.EmailField(
                        blank=True,
                        help_text="Primary email for notifications",
                        max_length=254,
                    ),
                ),
                (
                    "secondary_email",
                    models.EmailField(
                        blank=True,
                        help_text="Secondary email for important notifications",
                        max_length=254,
                    ),
                ),
                (
                    "primary_phone",
                    models.CharField(
                        blank=True,
                        help_text="Primary phone for SMS notifications",
                        max_length=20,
                    ),
                ),
                (
                    "secondary_phone",
                    models.CharField(
                        blank=True,
                        help_text="Secondary phone for emergency notifications",
                        max_length=20,
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        choices=[
                            ("UTC", "UTC"),
                            ("US/Eastern", "Eastern Time"),
                            ("US/Central", "Central Time"),
                            ("US/Mountain", "Mountain Time"),
                            ("US/Pacific", "Pacific Time"),
                            ("Europe/London", "London"),
                            ("Europe/Paris", "Paris"),
                            ("Asia/Tokyo", "Tokyo"),
                            ("Asia/Shanghai", "Shanghai"),
                            ("Australia/Sydney", "Sydney"),
                        ],
                        default="UTC",
                        max_length=50,
                    ),
                ),
                ("global_quiet_hours_enabled", models.BooleanField(default=False)),
                ("global_quiet_hours_start", models.TimeField(blank=True, null=True)),
                ("global_quiet_hours_end", models.TimeField(blank=True, null=True)),
                ("weekend_notifications_enabled", models.BooleanField(default=True)),
                ("holiday_notifications_enabled", models.BooleanField(default=True)),
                ("daily_digest_enabled", models.BooleanField(default=False)),
                (
                    "daily_digest_time",
                    models.TimeField(
                        blank=True, help_text="Time to send daily digest", null=True
                    ),
                ),
                ("weekly_digest_enabled", models.BooleanField(default=False)),
                (
                    "weekly_digest_day",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("monday", "Monday"),
                            ("tuesday", "Tuesday"),
                            ("wednesday", "Wednesday"),
                            ("thursday", "Thursday"),
                            ("friday", "Friday"),
                            ("saturday", "Saturday"),
                            ("sunday", "Sunday"),
                        ],
                        default="monday",
                        max_length=10,
                    ),
                ),
                ("weekly_digest_time", models.TimeField(blank=True, null=True)),
                ("marketing_emails_enabled", models.BooleanField(default=False)),
                ("newsletter_enabled", models.BooleanField(default=False)),
                ("survey_requests_enabled", models.BooleanField(default=True)),
                ("notification_sound_enabled", models.BooleanField(default=True)),
                ("notification_vibration_enabled", models.BooleanField(default=True)),
                (
                    "notification_preview_enabled",
                    models.BooleanField(
                        default=True, help_text="Show notification content in previews"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "default_language",
                    models.ForeignKey(
                        blank=True,
                        help_text="Default language for all notifications",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="notifications.templatelanguage",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_settings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Settings",
                "verbose_name_plural": "Notification Settings",
            },
        ),
        migrations.CreateModel(
            name="NotificationBlacklist",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "blacklist_type",
                    models.CharField(
                        choices=[
                            ("email", "Email Address"),
                            ("phone", "Phone Number"),
                            ("domain", "Email Domain"),
                            ("keyword", "Content Keyword"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="Email, phone, domain, or keyword to blacklist",
                        max_length=500,
                    ),
                ),
                (
                    "reason",
                    models.TextField(blank=True, help_text="Reason for blacklisting"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this blacklist entry expires",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_blacklist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_active"],
                        name="notificatio_user_id_f6f05a_idx",
                    ),
                    models.Index(
                        fields=["blacklist_type", "value"],
                        name="notificatio_blackli_4339e5_idx",
                    ),
                ],
                "unique_together": {("user", "blacklist_type", "value")},
            },
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("appointment_confirmation", "Appointment Confirmation"),
                            ("appointment_reminder", "Appointment Reminder"),
                            ("appointment_cancellation", "Appointment Cancellation"),
                            ("test_results_ready", "Test Results Ready"),
                            ("prescription_ready", "Prescription Ready"),
                            ("payment_confirmation", "Payment Confirmation"),
                            ("payment_reminder", "Payment Reminder"),
                            ("invoice_generated", "Invoice Generated"),
                            ("welcome_message", "Welcome Message"),
                            ("password_reset", "Password Reset"),
                            ("verification_code", "Verification Code"),
                            ("emergency_alert", "Emergency Alert"),
                            ("system_maintenance", "System Maintenance"),
                            ("marketing", "Marketing Communications"),
                            ("newsletter", "Newsletter"),
                            ("survey", "Survey Requests"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("in_app", "In-App Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True)),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("immediate", "Immediate"),
                            ("daily_digest", "Daily Digest"),
                            ("weekly_digest", "Weekly Digest"),
                            ("disabled", "Disabled"),
                        ],
                        default="immediate",
                        max_length=20,
                    ),
                ),
                (
                    "quiet_hours_start",
                    models.TimeField(
                        blank=True,
                        help_text="Start of quiet hours (no notifications)",
                        null=True,
                    ),
                ),
                (
                    "quiet_hours_end",
                    models.TimeField(
                        blank=True, help_text="End of quiet hours", null=True
                    ),
                ),
                (
                    "priority_threshold",
                    models.CharField(
                        choices=[
                            ("low", "Low and above"),
                            ("normal", "Normal and above"),
                            ("high", "High and above"),
                            ("urgent", "Urgent only"),
                        ],
                        default="low",
                        help_text="Minimum priority level to receive notifications",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "preferred_language",
                    models.ForeignKey(
                        blank=True,
                        help_text="Preferred language for this notification type",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="notifications.templatelanguage",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["user", "notification_type", "channel"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_enabled"],
                        name="notificatio_user_id_fb01c4_idx",
                    ),
                    models.Index(
                        fields=["notification_type", "channel"],
                        name="notificatio_notific_cc1b86_idx",
                    ),
                ],
                "unique_together": {("user", "notification_type", "channel")},
            },
        ),
        migrations.CreateModel(
            name="NotificationSchedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name for this schedule", max_length=200
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "schedule_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("custom", "Custom"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "start_time",
                    models.TimeField(help_text="Start time for notifications"),
                ),
                ("end_time", models.TimeField(help_text="End time for notifications")),
                (
                    "days_of_week",
                    models.JSONField(
                        default=list,
                        help_text="List of days when this schedule is active",
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "notification_types",
                    models.JSONField(
                        default=list,
                        help_text="List of notification types this schedule applies to",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "priority",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Schedule priority (higher number = higher priority)",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_schedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-priority", "name"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_active"],
                        name="notificatio_user_id_c1f053_idx",
                    ),
                    models.Index(
                        fields=["schedule_type", "is_active"],
                        name="notificatio_schedul_be357b_idx",
                    ),
                ],
            },
        ),
    ]
