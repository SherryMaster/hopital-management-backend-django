# Generated by Django 5.2.3 on 2025-06-19 16:59

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        (
            "appointments",
            "0002_recurringpattern_appointment_cancellation_reason_and_more",
        ),
        ("notifications", "0002_smsconfiguration_smsanalytics_smstemplate_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PushNotificationConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "provider_type",
                    models.CharField(
                        choices=[
                            ("fcm", "Firebase Cloud Messaging"),
                            ("apns", "Apple Push Notification Service"),
                            ("web_push", "Web Push Protocol"),
                            ("websocket", "WebSocket Real-time"),
                            ("mock", "Mock Provider (Testing)"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "configuration",
                    models.JSONField(
                        default=dict, help_text="Provider-specific configuration"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_default", models.BooleanField(default=False)),
                (
                    "daily_limit",
                    models.PositiveIntegerField(
                        blank=True, help_text="Daily push notification limit", null=True
                    ),
                ),
                (
                    "hourly_limit",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Hourly push notification limit",
                        null=True,
                    ),
                ),
                ("notifications_sent_today", models.PositiveIntegerField(default=0)),
                (
                    "notifications_sent_this_hour",
                    models.PositiveIntegerField(default=0),
                ),
                (
                    "last_reset_date",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "last_reset_hour",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PushNotificationAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                ("notifications_sent", models.PositiveIntegerField(default=0)),
                ("notifications_delivered", models.PositiveIntegerField(default=0)),
                ("notifications_clicked", models.PositiveIntegerField(default=0)),
                ("notifications_dismissed", models.PositiveIntegerField(default=0)),
                ("notifications_failed", models.PositiveIntegerField(default=0)),
                ("notifications_expired", models.PositiveIntegerField(default=0)),
                (
                    "device_metrics",
                    models.JSONField(
                        default=dict, help_text="Metrics broken down by device type"
                    ),
                ),
                (
                    "template_metrics",
                    models.JSONField(
                        default=dict, help_text="Metrics broken down by template type"
                    ),
                ),
                (
                    "provider_metrics",
                    models.JSONField(
                        default=dict, help_text="Metrics broken down by push provider"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("date",)},
            },
        ),
        migrations.CreateModel(
            name="PushNotificationTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("appointment_reminder", "Appointment Reminder"),
                            ("appointment_confirmed", "Appointment Confirmed"),
                            ("test_results_ready", "Test Results Ready"),
                            ("prescription_ready", "Prescription Ready"),
                            ("payment_due", "Payment Due"),
                            ("payment_received", "Payment Received"),
                            ("emergency_alert", "Emergency Alert"),
                            ("system_update", "System Update"),
                            ("new_message", "New Message"),
                            ("lab_report_ready", "Lab Report Ready"),
                            ("medication_reminder", "Medication Reminder"),
                            ("custom", "Custom Notification"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "title_template",
                    models.CharField(
                        help_text="Notification title with variable placeholders",
                        max_length=200,
                    ),
                ),
                (
                    "body_template",
                    models.TextField(
                        help_text="Notification body with variable placeholders",
                        max_length=500,
                    ),
                ),
                (
                    "icon_url",
                    models.URLField(blank=True, help_text="URL to notification icon"),
                ),
                (
                    "image_url",
                    models.URLField(blank=True, help_text="URL to notification image"),
                ),
                (
                    "action_url",
                    models.URLField(
                        blank=True, help_text="URL to open when notification is clicked"
                    ),
                ),
                (
                    "available_variables",
                    models.JSONField(
                        default=list,
                        help_text="List of available variables for this template",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, help_text="Default template for this type"
                    ),
                ),
                (
                    "requires_interaction",
                    models.BooleanField(
                        default=False,
                        help_text="Notification requires user interaction",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["template_type", "name"],
                "unique_together": {("template_type", "is_default")},
            },
        ),
        migrations.CreateModel(
            name="DeviceToken",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("device_token", models.CharField(max_length=500, unique=True)),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("web", "Web Browser"),
                            ("android", "Android"),
                            ("ios", "iOS"),
                            ("desktop", "Desktop"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "device_name",
                    models.CharField(
                        blank=True,
                        help_text="User-friendly device name",
                        max_length=200,
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("notifications_enabled", models.BooleanField(default=True)),
                (
                    "last_used_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="device_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-last_used_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "device_type"],
                        name="notificatio_user_id_c35f9d_idx",
                    ),
                    models.Index(
                        fields=["device_token"], name="notificatio_device__7b08eb_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PushNotification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notification_id",
                    models.CharField(
                        help_text="Human-readable notification ID",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "device_token",
                    models.CharField(
                        blank=True,
                        help_text="Device-specific push token",
                        max_length=500,
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("web", "Web Browser"),
                            ("android", "Android"),
                            ("ios", "iOS"),
                            ("desktop", "Desktop"),
                        ],
                        default="web",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("body", models.TextField(max_length=500)),
                ("icon_url", models.URLField(blank=True)),
                ("image_url", models.URLField(blank=True)),
                ("action_url", models.URLField(blank=True)),
                (
                    "template_variables",
                    models.JSONField(
                        default=dict, help_text="Variables used to render the template"
                    ),
                ),
                (
                    "custom_data",
                    models.JSONField(
                        default=dict, help_text="Custom data to send with notification"
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, help_text="When to send the notification", null=True
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="When the notification expires", null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("queued", "Queued"),
                            ("sending", "Sending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("clicked", "Clicked"),
                            ("dismissed", "Dismissed"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("attempts", models.PositiveIntegerField(default=0)),
                ("max_attempts", models.PositiveIntegerField(default=3)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                ("dismissed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("error_code", models.CharField(blank=True, max_length=50)),
                ("provider_message_id", models.CharField(blank=True, max_length=200)),
                ("provider_response", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="push_notifications",
                        to="appointments.appointment",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_push_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recipient_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="push_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="notifications.pushnotificationtemplate",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["recipient_user", "status"],
                        name="notificatio_recipie_700c09_idx",
                    ),
                    models.Index(
                        fields=["status", "scheduled_at"],
                        name="notificatio_status_aaf178_idx",
                    ),
                    models.Index(
                        fields=["device_type", "status"],
                        name="notificatio_device__dd2c44_idx",
                    ),
                ],
            },
        ),
    ]
