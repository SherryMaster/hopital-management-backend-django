# Generated by Django 5.2.3 on 2025-06-19 17:42

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("notifications", "0006_notificationjob_notificationqueue_cronjob_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily Report"),
                            ("weekly", "Weekly Report"),
                            ("monthly", "Monthly Report"),
                            ("custom", "Custom Period"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("total_notifications", models.PositiveIntegerField(default=0)),
                ("total_sent", models.PositiveIntegerField(default=0)),
                ("total_delivered", models.PositiveIntegerField(default=0)),
                ("total_opened", models.PositiveIntegerField(default=0)),
                ("total_clicked", models.PositiveIntegerField(default=0)),
                ("total_failed", models.PositiveIntegerField(default=0)),
                ("total_bounced", models.PositiveIntegerField(default=0)),
                ("total_unsubscribed", models.PositiveIntegerField(default=0)),
                (
                    "email_metrics",
                    models.JSONField(default=dict, help_text="Email-specific metrics"),
                ),
                (
                    "sms_metrics",
                    models.JSONField(default=dict, help_text="SMS-specific metrics"),
                ),
                (
                    "push_metrics",
                    models.JSONField(
                        default=dict, help_text="Push notification metrics"
                    ),
                ),
                (
                    "template_performance",
                    models.JSONField(
                        default=dict, help_text="Performance by template type"
                    ),
                ),
                (
                    "user_engagement",
                    models.JSONField(default=dict, help_text="User engagement metrics"),
                ),
                (
                    "hourly_distribution",
                    models.JSONField(default=dict, help_text="Notifications by hour"),
                ),
                (
                    "daily_distribution",
                    models.JSONField(
                        default=dict, help_text="Notifications by day of week"
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "cost_breakdown",
                    models.JSONField(
                        default=dict, help_text="Cost breakdown by channel/provider"
                    ),
                ),
                (
                    "average_delivery_time",
                    models.FloatField(
                        default=0, help_text="Average delivery time in seconds"
                    ),
                ),
                (
                    "average_open_time",
                    models.FloatField(
                        default=0, help_text="Average time to open in seconds"
                    ),
                ),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "generated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-generated_at"],
                "indexes": [
                    models.Index(
                        fields=["report_type", "start_date"],
                        name="notificatio_report__4f28ba_idx",
                    ),
                    models.Index(
                        fields=["generated_at"], name="notificatio_generat_cdb2dd_idx"
                    ),
                ],
                "unique_together": {("report_type", "start_date", "end_date")},
            },
        ),
        migrations.CreateModel(
            name="NotificationCampaign",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("campaign_id", models.CharField(max_length=20, unique=True)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "campaign_type",
                    models.CharField(
                        choices=[
                            ("promotional", "Promotional"),
                            ("transactional", "Transactional"),
                            ("reminder", "Reminder"),
                            ("announcement", "Announcement"),
                            ("survey", "Survey"),
                            ("newsletter", "Newsletter"),
                            ("emergency", "Emergency"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "target_audience",
                    models.JSONField(
                        default=dict, help_text="Audience targeting criteria"
                    ),
                ),
                ("estimated_recipients", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("scheduled", "Scheduled"),
                            ("running", "Running"),
                            ("paused", "Paused"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("total_sent", models.PositiveIntegerField(default=0)),
                ("total_delivered", models.PositiveIntegerField(default=0)),
                ("total_opened", models.PositiveIntegerField(default=0)),
                ("total_clicked", models.PositiveIntegerField(default=0)),
                ("total_conversions", models.PositiveIntegerField(default=0)),
                (
                    "budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "actual_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["campaign_type", "status"],
                        name="notificatio_campaig_9c9192_idx",
                    ),
                    models.Index(
                        fields=["start_date", "end_date"],
                        name="notificatio_start_d_de2c02_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="NotificationEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("queued", "Queued"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("opened", "Opened"),
                            ("clicked", "Clicked"),
                            ("bounced", "Bounced"),
                            ("failed", "Failed"),
                            ("unsubscribed", "Unsubscribed"),
                            ("complained", "Complained"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "event_timestamp",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("notification_type", models.CharField(max_length=50)),
                ("notification_channel", models.CharField(max_length=20)),
                (
                    "notification_id",
                    models.UUIDField(help_text="Reference to the actual notification"),
                ),
                ("recipient_email", models.EmailField(blank=True, max_length=254)),
                ("recipient_phone", models.CharField(blank=True, max_length=20)),
                ("user_agent", models.TextField(blank=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("device_type", models.CharField(blank=True, max_length=50)),
                (
                    "location",
                    models.JSONField(
                        blank=True, default=dict, help_text="Geographic location data"
                    ),
                ),
                ("provider_name", models.CharField(blank=True, max_length=100)),
                ("provider_message_id", models.CharField(blank=True, max_length=200)),
                ("provider_response", models.JSONField(blank=True, default=dict)),
                (
                    "event_data",
                    models.JSONField(
                        default=dict, help_text="Additional event-specific data"
                    ),
                ),
                (
                    "recipient_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-event_timestamp"],
                "indexes": [
                    models.Index(
                        fields=["event_type", "event_timestamp"],
                        name="notificatio_event_t_c16292_idx",
                    ),
                    models.Index(
                        fields=["notification_channel", "event_type"],
                        name="notificatio_notific_0ca480_idx",
                    ),
                    models.Index(
                        fields=["recipient_user", "event_type"],
                        name="notificatio_recipie_68e710_idx",
                    ),
                    models.Index(
                        fields=["notification_id"],
                        name="notificatio_notific_baff3b_idx",
                    ),
                ],
            },
        ),
    ]
